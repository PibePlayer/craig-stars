name: .NET

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  GODOT_VERSION: 3.3.2
  EXPORT_NAME: craig-stars

jobs:
  build:

    runs-on: ubuntu-latest
    container:
      image: barichello/godot-ci:mono-3.3.2

    steps:
    - uses: actions/checkout@v2
      with:
        lfs: true

    - name: Setup .NET
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    - name: Setup Godot
      run: |
        mkdir -v -p ~/.local/share/godot/templates
        mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono

    - name: Restore
      run: dotnet restore

    - name: Build Solutions
      run: |
        godot --path ./project.godot -v --build-solutions --quit
      timeout-minutes: 1
      continue-on-error: true

    - name: Build
      run: dotnet build

    - name: Test
      run: dotnet test
  # export-web:
  #   name: Web Export
  #   runs-on: ubuntu-latest
  #   container:
  #     image: barichello/godot-ci:mono-3.3.2
  #   steps:
  #     - name: Checkout
  #       uses: actions/checkout@v2
  #       with:
  #         lfs: true
  #     - name: Setup
  #       run: |
  #         mkdir -v -p ~/.local/share/godot/templates
  #         mv /root/.local/share/godot/templates/${GODOT_VERSION}.stable.mono ~/.local/share/godot/templates/${GODOT_VERSION}.stable.mono
  #     - name: Web Build
  #       run: |
  #         mkdir -v -p build/web
  #         cd $EXPORT_NAME
  #         godot -v --export "HTML5" ../build/web/index.html
  #     - name: Upload Artifact
  #       uses: actions/upload-artifact@v1
  #       with:
  #         name: web
  #         path: build/web
